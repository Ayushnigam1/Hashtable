import Navbar from "@/components/Navbar";
import React, { useEffect, useState } from "react";
import Footer from "@/components/Footer";
import Head from "next/head";
import hljs from "highlight.js";
import "highlight.js/styles/github-dark.css";
import { getSectionIndex, getSections, getSubSections } from "lib/sections";
import { BreadCrumbs } from "@/components/BreadCrumbs";
import { MDXRemote } from "next-mdx-remote";
import { FaCross, FaEllipsisH } from "react-icons/fa";
import { FiCrosshair } from "react-icons/fi";

export async function getStaticPaths() {
  const sections = await getSections();
  const paths = sections.map((section) => ({
    params: { section },
  }));
  return { paths, fallback: false };
}

export async function getStaticProps({ params }: any) {
  const mdxContent = await getSectionIndex(params.section);
  const subsection = await getSubSections(params.section);
  return {
    props: { source: mdxContent, subsection, section: params.section },
  };
}

const Section = ({ source, subsection, section }: any) => {
 const [css,setcss]=useState('');
    useEffect(() => {
    hljs.highlightAll();
  }, []);
  const openSidebar=()=>{
    css=="hidden"?setcss("contents"):setcss("hidden");
  }
 
  return (
    <>
      <Head>
        <title>{source.frontmatter.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/katex@0.15.0/dist/katex.min.css"
        />
      </Head>
      <main>
        <Navbar mode="sticky" />
        <section className="flex justify-center w-full">
          
           
          <div className={`h-screen w-80 sm:w-[250px] sm:sticky fixed top-18 bg-gray-100 overflow-y-auto z-10 dark:bg-black dark:scrollbar-thumb-gray-700 scrollbar-thumb-gray-300 scrollbar-track-gray-200 scrollbar-thin dark:scrollbar-track-gray-500 dark:scrollbar-blue-700`}>
            <span className=" p-2 flex justify-center  text-2xl font-semibold " >Subsections</span>
           
         {/* <div className="contents sm:hidden">
          <div className={`relative   items-center flex justify-around`}  >
            <span className="cursor-pointer " >Subsections</span>
            <span className={`ml-28 sm:hidden cursor-pointer `} onClick={openSidebar}>
           <FiCrosshair/></span>
          </div></div> */}
          <hr/>
            <div className="ml-1 mb-10">
                {subsection.map((sub: string, index: number) => (
                    <div key={index} className="my-1 flex flex-col font-semibold text-lg cursor-pointer border-b  rounded p-2 hover:bg-gray-200 dark:hover:bg-gray-800">
                      <a href={`./${section}/${sub}`}>
                        {sub.replace(/_/g, " ")}
                      </a>
                    </div>
                
                ))}
             </div>
            </div>
       
          
          <div className="w-[320px] sm:w-auto border shadow-sm static">
          
            <BreadCrumbs />
            <article className="prose inline-block lg:prose-xl dark:prose-invert text-justify mx-5">
              {source && <MDXRemote {...source} />}
            </article>
          </div>
        </section>
      </main>
      <Footer />
    </>
  );
};

export default Section;
